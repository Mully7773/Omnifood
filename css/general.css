/* 
--- 01 TYPOGRAPHY SYSTEM
- FONT SIZE SYSTEM (px)
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

- Font weights:
Default: 400
Medium 500
Semi-bold 600
Bold 700

- Line heights:
Default: 1
Small 1.05
Medium 1.2
Paragraph default 1.6

- Letter spacing
-0.5
0.75

--- 02 COLORS

- Primary: #e67e22
- Tints: #fdf2e9, #fae5d3
- Shades: #cf711f
- Accents:
- Greys: #555, #333

--- 05 SHADOWS

--- 06 BORDER-RADIUS
 Default: 9px

---07 WHITESPACE

- Spacing system (px)
      2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128
*/

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  /* font-size: 10px; */
  /* Now 1rem = 10px - by changing the font-size here we can completely change the entire page's layout - this means when we want to change the layout for a smaller screen size, we can manipulate this font-size instead of having to change each element's size individually*/
  /* It's good to set the default font size here to 10px for easy calculations, i.e., 1rem = 10px; however, it isn't good to do because users might change the font size of the website, which will cause problems, so it's actually better to set a percentage instead */
  font-size: 62.5%;
  /* 10px / 16px = 0.625 = 62.5% */
  /* Percentage of user's browser font-size setting  - 62.5% is basically 10px but in percentage form to that it scales with the user's choice if they decide to change the size of the font - now you can start using rem instead of px everywhere*/
}

body {
  font-family: "Rubik", sans-serif;
  line-height: 1;
  font-weight: 400;
  color: #555;
}

/* ********************** */
/* GENERAL REUSABLE COMPONENTS */
/* ********************** */

.container {
  /* 1140px another convention */
  /* We don't use .container for the hero because the hero has a larger width - looks more aesthetically pleasing */
  max-width: 120rem;
  padding: 0 3.2rem;
  margin: 0 auto;
}

/* reusable grid classes */
.grid {
  display: grid;
  row-gap: 9.6rem;
  column-gap: 6.4rem;
}

.grid--2-cols {
  grid-template-columns: repeat(2, 1fr);
}
.grid--3-cols {
  grid-template-columns: repeat(3, 1fr);
}

.grid--4-cols {
  grid-template-columns: repeat(4, 1fr);
}

.grid--center-v {
  align-items: center;
}

.heading-primary,
.heading-secondary,
.heading-tertiary {
  color: #333;
  /* Darker shades of main color */
  /* color: #45260a;
    color: #343a40; */
  letter-spacing: -0.5px;
  font-weight: 700;
}

.heading-primary {
  font-size: 5.2rem;
  line-height: 1.05;
  margin-bottom: 3.2rem;
}

.heading-secondary {
  font-size: 4.4rem;
  line-height: 1.2;
  margin-bottom: 9.6rem;
}

.heading-tertiary {
  font-size: 3rem;
  line-height: 1.2;
  margin-bottom: 3.2rem;
}

.subheading {
  /* Because <span> is an inline element */
  display: block;
  font-size: 1.6rem;
  font-weight: 500;
  color: #cf711f;
  text-transform: uppercase;
  margin-bottom: 1.6rem;
  letter-spacing: 0.75px;
}

.btn:link,
.btn:visited {
  display: inline-block;
  font-size: 2rem;
  font-weight: 600;
  padding: 1.6rem 3.2rem;
  border-radius: 9px;
  text-decoration: none;

  /* Put transition on original 'state' which properties we want to animate (use 'all' for background color and color - otherwise specify  - note third argument is the type of animation*/
  transition: background-color 0.3s;
}

.btn--full:link,
.btn--full:visited {
  background-color: #e67e22;
  color: #fff;
}
.btn--full:hover,
.btn--full:active {
  background-color: #cf711f;
}

.btn--outline:link,
.btn--outline:visited {
  background-color: #fff;
  color: #555;
}
.btn--outline:hover,
.btn--outline:active {
  background-color: #fdf2e9;
  /* border: 3px solid #fff; */

  /* Trick to add border inside button to remove content pushing up */
  box-shadow: inset 0 0 0 3px #fff;
}

.margin-right-sm {
  /* ensure it has the highest priority */
  margin-right: 1.6rem !important;
}
